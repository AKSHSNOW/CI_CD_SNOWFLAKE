name: Run Modified SQL Files on Snowflake

on:
   push:
    branches:
      - DEV
   workflow_dispatch:

jobs:
  run-modified-sql:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Checkout the repository code
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install pipx
      run: |
        python3 -m pip install --user pipx
        python3 -m pipx ensurepath
        # Ensure pipx is available in the current shell session
        export PATH="$HOME/.local/bin:$PATH"
    
    - name: Install Snowflake CLI (snow)
      run: |
        pipx install snowflake-cli

    - name: Verify Snowflake CLI Installation
      run: |
        snow --help

    # Step 4: Detect modified SQL files between the current and previous commits
    - name: Detect Modified SQL Files
      id: modified_files
      run: |
        git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- '*.sql' > modified_sql_files.txt
        if [ -s modified_sql_files.txt ]; then
            echo "File has content."
          else
            echo "File is empty!"
          fi

    - name: Run SQL Files
      if: steps.modified_files.outputs.sql_files != ''
      run: |
            while read sql_file; do
               echo "Attempting to run: $sql_file"
               if [[ -f $sql_file ]]; then  # Check if file exists
                 echo "Running $sql_file with SnowSQL"
                 ./snowsql -a $SNOWFLAKE_ACCOUNT \
                     -u $SNOWFLAKE_USER \
                     -p $SNOWFLAKE_PASSWORD \
                     -d $SNOWFLAKE_DATABASE \
                     -s $SNOWFLAKE_SCHEMA \
                     -f $sql_file
               else
                 echo "Error: SQL file $sql_file not found."
            fi
             done < modified_sql_files.txt


        

