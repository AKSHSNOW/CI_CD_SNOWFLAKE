name: Run Modified SQL Files on Snowflake

on:
  push:
    branches:
      - DEV
  workflow_dispatch:

jobs:
  run-modified-sql:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Checkout the repository code
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install SnowSQL
      run: |
        # Download and install SnowSQL
        curl -o snowsql-linux_amd64.tar.gz -L "https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2.0/snowsql-linux_amd64.tar.gz"
    
        # Check if the file was downloaded correctly
        if [[ $(file snowsql-linux_amd64.tar.gz) != *gzip* ]]; then
        echo "Downloaded file is not in gzip format."
        exit 1
        fi

        # Extract and install SnowSQL
        tar -xzf snowsql-linux_amd64.tar.gz -C /usr/local/bin
        chmod +x /usr/local/bin/snowsql
        echo "export PATH=/usr/local/bin:$PATH" >> $GITHUB_ENV

    # Step 2: Detect modified SQL files between the current and previous commits
    - name: Detect Modified SQL Files
      id: modified_files
      run: |
        git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- '*.sql' > modified_sql_files.txt
        # Set the output if any SQL files were found
          if [ -s modified_sql_files.txt ]; then
            # Set the output for later use
            echo "sql_files=$(cat modified_sql_files.txt)" >> $GITHUB_ENV
          else
            echo "No SQL files modified."
            echo "sql_files=" >> $GITHUB_ENV
          fi
        
     # Step 3: Print the output of the previous step
    - name: Print Modified SQL Files
      run: |
          echo "The modified SQL files are: ${{ env.sql_files }}"

    # Step 4: Run each modified SQL file on Snowflake using SnowSQL
    - name: Execute SQL Files on Snowflake
      if: env.sql_files != ''
      run: |
        while read sql_files; do
        echo "Running $sql_files"
          echo "Executing $sql_file on Snowflake..."
          snowsql -a $SNOWFLAKE_ACCOUNT \
                    -u $SNOWFLAKE_USER \
                    -p $SNOWFLAKE_PASSWORD \
                    -d $SNOWFLAKE_DATABASE \
                    -r $SNOWFLAKE_ROLE \
                    -w $SNOWFLAKE_WAREHOUSE \
                    -f $sql_files
        done < modified_sql_files.txt
      env:
        SNOWFLAKE_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SF_USERNAME }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
        SNOWFLAKE_DATABASE: ${{ secrets.SF_DATABASE }}
        SNOWFLAKE_ROLE: ${{ secrets.SF_ROLE }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
