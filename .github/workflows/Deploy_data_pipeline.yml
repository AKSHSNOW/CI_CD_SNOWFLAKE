name: Run Modified SQL Files on Snowflake

on:
  push:
    branches:
      - DEV
  workflow_dispatch:

jobs:
  run-modified-sql:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Checkout the repository code
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install pipx
      run: |
        python3 -m pip install --user pipx
        python3 -m pipx ensurepath
        # Ensure pipx is available in the current shell session
        export PATH="$HOME/.local/bin:$PATH"
    
    - name: Install Snowflake CLI (snow)
      run: |
        pipx install snowflake-cli

    - name: Verify Snowflake CLI Installation
      run: |
        snow --help

    # Step 4: Detect modified SQL files between the current and previous commits
    - name: Detect Modified SQL Files
      id: modified_files
      run: |
        git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- '*.sql' > modified_sql_files.txt
        if [ ! -s modified_sql_files.txt ]; then
          echo "No SQL files modified."
          exit 0
        fi
        cat modified_sql_files.txt

    # Step 5: Run each modified SQL file on Snowflake using SnowSQL
    - name: Execute SQL Files on Snowflake
      env:
        SNOWFLAKE_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SF_USERNAME }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
        SNOWFLAKE_DATABASE: ${{ secrets.SF_DATABASE }}
        SNOWFLAKE_ROLE: ${{ secrets.SF_ROLE }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
        
      if: steps.modified_files.outputs.sql_files != ''
      run: |
        while read sql_file; do
          echo "Executing $sql_file on Snowflake..."
          ./snowsql -a $SNOWFLAKE_ACCOUNT \
                    -u $SNOWFLAKE_USER \
                    -p $SNOWFLAKE_PASSWORD \
                    -d $SNOWFLAKE_DATABASE \
                    -r $SNOWFLAKE_ROLE \
                    -w $SNOWFLAKE_WAREHOUSE \
                    -f $sql_file
        done < modified_sql_files.txt
      

    # Step 6: Clean up SnowSQL installation (optional)
    - name: Clean Up
      run: |
        rm -f snowsql-1.2.21-linux_x86_64.bash
